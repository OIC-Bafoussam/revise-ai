import type { HttpContextContract } from '@ioc:Adonis/Core/HttpContext'
import fs from 'fs'
import path from 'path'

export default class FlashcardsController {
  public async generate({ request, response }: HttpContextContract) {
    try {
      // 1. R√©cup√©rer le nom du fichier
      const fileName = request.input('fileName')
      if (!fileName) {
        return response.badRequest({ error: 'Nom du fichier manquant' })
      }

      // 2. V√©rifier et lire le fichier
      const filePath = path.join(__dirname, '../../../public/uploads', fileName)
      if (!fs.existsSync(filePath)) {
        return response.notFound({ error: 'Fichier introuvable' })
      }

      const fileContent = fs.readFileSync(filePath, 'utf-8')

      // 3. G√©n√©rer des flashcards (simulation pour l‚Äôinstant)
      const flashcards = [
        { question: 'Qu‚Äôest-ce que l‚ÄôIA ?', answer: 'L‚Äôintelligence artificielle est un domaine informatique qui vise √† reproduire des capacit√©s cognitives humaines.' },
        { question: 'Qui est Alan Turing ?', answer: 'Un pionnier de l‚Äôinformatique, consid√©r√© comme l‚Äôun des p√®res de l‚ÄôIA.' },
        { question: 'Quel est le but des flashcards ?', answer: 'Faciliter la m√©morisation par r√©p√©tition espac√©e.' },
      ]

      // üëâ Plus tard : remplacer ce bloc par un vrai appel √† une IA pour g√©n√©rer des flashcards √† partir de `fileContent`

      return response.json({
        message: 'Flashcards g√©n√©r√©es avec succ√®s ‚úÖ',
        file: fileName,
        flashcards,
      })
    } catch (error) {
      return response.status(500).json({ error: 'Erreur lors de la g√©n√©ration des flashcards', details: error.message })
    }
  }
}
